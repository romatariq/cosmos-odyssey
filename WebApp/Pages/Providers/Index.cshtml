@page
@using Helpers
@model WebApp.Pages_Providers.IndexModel

@{
    ViewData["Title"] = "Index";

    var getRouteText = (int count) => count switch
    {
        1 => "Direct",
        2 => "1 stop",
        _ => $"{count - 1} stops"
    };
}

<h1>Providers</h1>

@if (Model.Trips.Count == 0 && Model.From != Model.To)
{
    <div class="alert alert-danger" role="alert">
        Try again in a moment. Fetching newest data.
    </div>
}

<form method="get">
    <div class="d-flex mb-1">
        <div class="col-2">
            <label asp-for="From" class="control-label"></label>
            <select asp-for="From" class="form-control" asp-items="Model.FromSelectList"></select>
        </div>
        <div class="col-2 mx-2">
            <label asp-for="To" class="control-label"></label>
            <select asp-for="To" class="form-control" asp-items="Model.ToSelectList"></select>
        </div>
        <div class="col-2 mx-2">
            <label asp-for="Sort" class="control-label"></label>
            <select asp-for="Sort" class="form-control" asp-items="Model.SortBySelectList"></select>
        </div>
        <div class="col-2">
            <label asp-for="Filter" class="control-label"></label>
            <input asp-for="Filter" class="form-control" placeholder="Company name"/>
        </div>
        
    </div>
    <input type="submit" class="btn btn-primary" value="Filter"/>
</form>
<div class="d-flex my-1">
    <div class="col-1">
        @if (Model.PageNr > 1)
        {
            <a id="previous-page" 
               asp-route-sort="@Model.Sort" 
               asp-route-from="@Model.From" 
               asp-route-to="@Model.To" 
               asp-route-filter="@Model.Filter" asp-page="./Index" asp-route-pageNr="@(Model.PageNr - 1)">Previous</a>
        }
    </div>        
    <div class="col-1">
        @if (Model.PageCount > Model.PageNr)
        {
            <a id="next-page" 
               asp-route-sort="@Model.Sort" 
               asp-route-from="@Model.From" 
               asp-route-to="@Model.To" 
               asp-route-filter="@Model.Filter" asp-page="./Index" asp-route-pageNr="@(Model.PageNr + 1)">Next</a>
        }
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Trips[0].Departure)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Trips[0].Arrival)
            </th>
            <th>
                Companies
            </th>
            <th>
                Stops
            </th>
            <th>
                Route
            </th>
            <th>
                Travel time
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Trips[0].Distance)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Trips[0].Price)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Trips) {
    var companies = string.Join(", ", item.Flights.Select(f => f.Company).Distinct().Order());
    var stops = getRouteText(item.Flights.Count);
    var route = string.Join(" - ", item.Flights.Select(f => f.From).Append(item.Flights.Last().To));
    
        <tr>
            <td>
                @item.Departure.GetFormattedDateTime()
            </td>
            <td>
                @item.Arrival.GetFormattedDateTime()
            </td>
            <td>
                @Html.DisplayFor(modelItem => companies)
            </td>
            <td>
                @stops
            </td>
            <td>
                @route
            </td>
            <td>
                @(item.Arrival.Subtract(item.Departure).GetFormattedTimeDifference())
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Distance)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                <a asp-route-tripId="@item.Id" asp-page="/Reservations/Create">Reserve</a>
            </td>
        </tr>
}
    </tbody>
</table>
